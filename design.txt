项目名称：成都市经济和信息化委员会资产管理系统


应用场景：
    1.大型仓库中存放有大量的设备
    2.并且每天有大量的设备借出和归还
    3.仓库配有专门的管理员
    4.通过档案查找设备的信息（借出状态&存放位置）非常麻烦
    5.每次设备借出和归还都需要登记
项目应用效果：
    1.支持设备的搜索，免去了每次借用设备时的去查找档案的麻烦。
    2.找到相关设备后，设备的详细参数，借出状态，历史借用人，可立即显示。
    3.并且在设备的上面贴有相关的二维码，可以让借用人去找到相关的设备，然后通过手机扫描二维码的方式方便的借用。
    4.支持通知功能（包括 短信、微信推送、网站消息通知、邮件等）

项目需求:
    1.网站前端
    |-- 1.登陆界面
    |   |-- 1.HTML 登陆页面
    |   |-- 2.CSS 页面布局
    |   |-- 3.JAVASCRIPT 实现
    |       |-- 1.输入框的非空验证
    |       |-- 2.输入账号格式的合法
    |       |-- 3.对账号及密码进行 MD5 加密 将其传回后端进行验证
    |           |-- 1.如果账号验证成功，进入管理页面
    |           |-- 2.如果账号验证失败，提示用户重新输入账号
    |-- 2.管理页面
        |-- 1.表格导入 功能
        |   |-- 1.表格文件合法性验证
        |   |-- 2.利用 HTTP POST 请求将表格传输到后台 （必要时可添加 MD5 文件完整性验证）
        |   |-- 3.根据后台导入结果提示用户进行相关的操作
        |-- 2.设备管理链接 （链接到所有设备的管理界面） 设备管理界面显示所有的设备
        |   |-- 1.JAVASCRIPT 代码实现与后台进行数据交互
        |   |   |-- 1.设备的分页请求功能
        |   |   |-- 2.HTML 页面设备信息的动态更新
        |   |   |   |-- 1.设备图片
        |   |   |   |-- 2.基本信息（简单的显示）
        |   |-- 2.点击单个设备进入设备详细信息页面
        |   |   |-- 1.JAVASCRIPT 获取与更新设备
        |   |   |   |-- 1.获取单个设备的详细信息，并且对页面进行动态更新
        |   |   |   |-- 2.页面基本按钮的功能
        |   |   |   |   |-- 1.显示和打印设备二维码
        |   |   |   |   |-- 2.对设备进行报废（设备将从可用设备数据库删除，移动到报废数据库）
        |   |   |   |   |-- 3.更新设备维修状态
        |   |   |   |   |-- 4.设备借用按钮
        |   |   |   |   |   |-- 1.通过JAVASCRIPT判断，如果设备可用，那么借用按钮可用
        |   |   |   |   |   |-- 2.通过JAVASCRIPT判断，如果设备不可用，那么借用按钮被禁用
        |   |   |   |   |-- 5.设备基本信息的修改按钮 打开设备基本信息的修改页面
        |   |   |   |       |-- 1.修改设备的基本信息
        |   |   |   |       |   |-- 1.设备编号
        |   |   |   |       |   |-- 2.设备名称
        |   |   |   |       |   |-- 3.设备类型
        |   |   |   |       |   |-- 4.规格
        |   |   |   |       |   |-- 5.设备型号
        |   |   |   |       |   |-- 6.存放位置
        |   |   |   |       |   |-- 7.设备状态
        |   |   |   |       |   |-- 8.归属科室
        |   |   |   |       |   |-- 9.联系人编号
        |   |   |   |       |   |-- 10.联系人名称
        |   |   |   |       |   |-- 11.联系人电话
        |   |   |   |       |   |-- 12.联系人邮箱
        |   |   |   |       |   |-- 13.保修日期
        |   |   |   |       |   |-- 14.采购日期
        |   |   |   |       |   |-- 15.登记日期
        |   |   |   |       |   |-- 16.供应商
        |   |   |   |       |   |-- 17.备注
        |   |   |   |       |-- 2.JAVASCRIPT
        |   |   |   |       |   |-- 1.用户输入信息的合法性验证
        |   |   |   |       |   |-- 2.按钮功能
        |   |   |   |       |   |   |-- 1.返回按钮 提示用户是否放弃此次修改 并且返回到上一个页面
        |   |   |   |       |   |   |-- 2.重置按钮 提示用户确定 从服务器从新请求数据，并且更新此页面
        |   |   |   |       |   |   |-- 3.提交按钮
        |   |   |   |       |   |       |-- 1.再次验证信息的合法性。
        |   |   |   |       |   |       |-- 2.打包数据，提交最终结果，等待服务器返回，并提示用户修改结果
        |   |   |   |       |   |       |-- 3.提示页面按钮实现返回到设备基本信息，并且刷新修改结果
        |   |   |   |       |-- 3.网页界面和布局
        |   |   |-- 2.点击单个设备进入设备详细信息页面
        |-- 3.设备创建链接 （进入创建）
        |   |-- 1.设备创建前端显示页面
        |   |-- 3.JAVASCRIPT
        |   |   |-- 1.用户输入的合法验证
        |   |   |-- 2.用户选择的图片处理及显示
        |   |   |-- 3.按钮功能实现
        |   |       |-- 1.返回按钮 返回上一个页面
        |   |       |-- 2.清空按钮 提示用户确定 清空所有输入框
        |   |       |-- 3.提交按钮 提示用户确定 最终数据验证，打包所有数据，上传到后端处理，返回结果
        |-- 4.消息通知栏 （此功能按照项目需求进行添加）
        |-- 5.系统公告栏 （此功能按照项目需求进行添加）
        |-- 6.待办事项栏 （此功能按照项目需求进行添加）
        |-- 7.基本管理选项
        |   |-- 1.退出系统选项
        |   |-- 2.后台管理选项
        |   |-- 3.消息通知管理选项
        |-- 8.一些其他相关办公网站的快捷链接（按照需要添加）

    2.网站后端
        |-- 1.对静态网站请求做出反应（路由）
        |   |-- 1.登陆界面
        |   |-- 2.所有设备界面
        |   |-- 3.设备详情界面
        |   |-- 4.设备信息修改界面
        |   |-- 5.设备添加界面
        |-- 2.前端网站发出请求做出处理
        |   |-- 1.登陆验证请求
        |   |   |-- 1.登陆验证请求 查询数据库中的MD5值与用户的对比，如果正确就返回相应的token
        |   |-- 2.表格批量导入请求
        |   |   |-- 1.保存临时表格文件
        |   |   |-- 2.读取表格数据，并对其进行格式化
        |   |   |-- 3.将格式化的数据写入数据库
        |   |-- 3.获取所有设备请求 分页 amount/page
        |   |   |-- 1.利用算法找到对应的数据位置，并对其进行读取
        |   |   |-- 2.对数据进行格式化&打包返回给前端
        |   |-- 4.获取单个设备详细信息请求
        |   |   |-- 1.读取请求中的设备ID
        |   |   |-- 2.查询数据库中对应设备的详细信息
        |   |   |-- 3.返回设备的详细信息
        |   |-- 5.添加设备请求
        |   |   |-- 1.保存请求中的图片到对应的文件夹
        |   |   |-- 2.读取请求的设备详细信息
        |   |   |-- 3.在设备表用添加一条设备记录
        |   |-- 6.修改设备请求
        |   |   |-- 1.读取设备的ID
        |   |   |-- 2.找到设备ID对应的设备图片，将其删除
        |   |   |-- 3.将请求的文件保存到相应的位置
        |   |   |-- 4.读取请求的设备详细信息
        |   |   |-- 5.通过设备ID查找设备表中对应的设备并将其信息进行更新
        |   |-- 7.删除设备请求
        |   |   |-- 1.读取设备的ID
        |   |   |-- 2.找到设备ID对应的设备图片，将其删除
        |   |   |-- 3.通过设备ID删除设备表中对应的设备
        |   |-- 8.报废设备请求
        |   |   |-- 1.读取设备的ID
        |   |   |-- 2.通过设备ID更新设备表中对应的设备报废信息
        |   |   |-- 3.将设备信息移动到报废设备表中
        |   |-- 9.维修设备请求 （只是简单的实现，会根据数据的多少重新建数据表）
        |       |-- 1.读取设备的ID
        |       |-- 2.通过设备ID更新设备表中对应的设备报废信息
        |-- 3.操作数据库 对数据库的数据进行读取&格式化 对数据库已有数据进行更新 添加新的数据
        |-- 4.前端网站上传的图片进行分类整理

    3.网站数据库
        |-- 1.数据库建表
        |   |-- 1.用户表 （详细信息见建表文件）
        |   |-- 2.设备表 （详细信息见建表文件）
        |   |-- 3.报废设备表 （详细信息见建表文件）
        |-- 2.数据库配置
            |-- 1.根据使用环境配置

    4.网站服务器 （按照性能需求购买）


注：
    1.此方案的优势在于可用通过设备上的二维码快速定位设备
    2.此方案仅是理论的实现方案，最终方案可能会更加应用场景和项目需求做相应的改动
    3.此方案的最终完成的时间 根据 甲方需求（包括性能要求、功能负责程度等）、技术难点、团队现有资源等方面来确定，现暂时无法给出准确时间



